package labs; import java.util.Scanner; public class Ex029 { public static void main(String... args) { System.out.print("\033[2J\033[H"); Scanner scanner = new Scanner(System.in); short value = 0; String valueInput = null; while (true) { try { System.out.println("exit para sair."); System.out.print("Quantidade de termos: "); if ((valueInput = scanner.nextLine().replace(" ", "")).equalsIgnoreCase("exit")) { System.exit(0);} else { value = (short) Math.abs(Short.parseShort(valueInput)); } if (value > 50) { throw new Exception("Valor máximo de termos: 50 "); } break;} catch (Exception e) { System.out.print("\033[2J\033[H"); System.out.printf("Erro: %s\n", e.getMessage()); } } fibonacci(value); System.out.printf("\n%s\n", "-".repeat(30)); System.out.printf("%,d\n", outro(value)); scanner.close(); } private static void fibonacci(final short SIZE) { if (SIZE == 0) { System.out.print("0 "); } long t1 = 1; long t2 = 1; long fib = 0; short i = 0; while (i++ < SIZE) { /* System.out.printf("%dº -> %,d\n", i, t1); */ System.out.printf("%,d ", t1); fib = t1 + t2; t1 = t2; t2 = fib; } } private static int outro(final short VALUE) { double phi = (1 + Math.sqrt(5)) / 2; return (int) Math.round(Math.pow(phi, VALUE) / Math.sqrt(5)); } }
